\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jan 31 15:57:51 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Jan 31 15:57:51 CET 2017
name=SortPerm[SortPerm\\:\\:sort()].JML normal_behavior operation contract.0
contract=SortPerm[SortPerm\\:\\:sort()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "3b928241d3c6497f2bf3626bad48a3118b304db1"))

(autoModeTime "35562")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "Class_invariant_axiom_for_SortPerm" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "notLeft" (formula "6"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "pos"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "idx"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (builtin "Loop Invariant" (formula "8") (newnames "variant,b,heapBefore_LOOP,posBefore_LOOP,idxBefore_LOOP,pos_0,idx_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
      (rule "andRight" (formula "8"))
      (branch "Case 1"
         (rule "andRight" (formula "8"))
         (branch "Case 1"
            (rule "andRight" (formula "8"))
            (branch "Case 1"
               (rule "andRight" (formula "8"))
               (branch "Case 1"
                  (rule "andRight" (formula "8"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "leq_literals" (formula "8"))
                     (rule "closeTrue" (formula "8"))
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_leqRight" (formula "8"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "6"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "leq_literals" (formula "8"))
                  (rule "closeTrue" (formula "8"))
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "8"))
               (rule "inEqSimp_ltRight" (formula "8"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "6"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "inEqSimp_invertInEq1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "times_zero_2" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "qeq_literals" (formula "6") (term "0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "8"))
            (rule "closeTrue" (formula "8"))
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "8"))
      )
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "translateJavaSubInt" (formula "10") (term "0,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "10") (term "0,1,1,1,0,1"))
      (rule "andLeft" (formula "7"))
      (rule "impRight" (formula "11"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "eqSymm" (formula "15") (term "1,0,0,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "pullOutSelect" (formula "15") (term "0,1,0,1,1,1,0") (inst "selectSK=SortPerm_a_1"))
      (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
      (rule "eqSymm" (formula "1") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
      (rule "applyEqReverse" (formula "16") (term "0,1,0,1,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "exc_1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "thrownExc"))
      (rule "blockThrow" (formula "15") (term "1,0,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "JML_represents_clause_for_SortPerm_seqa" (formula "11") (term "1") (inst "sk=sk_3") (inst "S=S") (ifseqformula "3"))
      (branch "Use Axiom"
         (rule "array2seqDef" (formula "11") (term "1") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "11") (term "2,1") (ifseqformula "1") (ifseqformula "13"))
         (rule "JML_represents_clause_for_SortPerm_seqa" (formula "11") (term "0") (inst "sk=sk_4") (inst "S=S") (ifseqformula "3"))
         (branch "Use Axiom"
            (rule "replaceKnownSelect_taclet10_0" (formula "11") (term "1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "11") (term "1,0"))
            (rule "array2seqDef" (formula "11") (term "0") (inst "u=u"))
            (rule "compound_less_than_comparison_2" (formula "12") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_4"))
            (rule "compound_subtraction_1" (formula "12") (term "1") (inst "#v=x_5"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_5"))
            (rule "eval_order_array_access6" (formula "12") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_1"))
            (rule "assignment_read_attribute_this" (formula "12"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replaceKnownSelect_taclet10_0" (formula "12") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "12") (term "0,1,0"))
            (rule "assignment_read_length" (formula "12"))
            (branch "Normal Execution (x_arr_1 != null)"
               (builtin "One Step Simplification" (formula "12"))
               (rule "assignmentSubtractionInt" (formula "12") (term "1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "translateJavaSubInt" (formula "12") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
               (rule "mul_literals" (formula "12") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "12") (term "1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "methodCallEmpty" (formula "12") (term "1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "emptyModality" (formula "12") (term "1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "notRight" (formula "12"))
               (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_6"))
               (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_7"))
               (rule "assignment" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_8"))
               (rule "compound_subtraction_1" (formula "15") (term "1") (inst "#v=x_9"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_9"))
               (rule "eval_order_array_access6" (formula "15") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_2"))
               (rule "assignment_read_attribute_this" (formula "15"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replaceKnownSelect_taclet10_0" (formula "15") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "15") (term "0,1,0"))
               (rule "assignment_read_length" (formula "15"))
               (branch "Normal Execution (x_arr_2 != null)"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "replace_known_left" (formula "15") (term "0,0,1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                  (rule "ifSplit" (formula "16"))
                  (branch "if x_6 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "1"))
                     (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_max,result,exc_0") (contract "SortPerm[SortPerm::max(int)].JML normal_behavior operation contract.0"))
                     (branch "Post (max)"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "1,1,1,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "0,1,1,0,1,0,1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "1,0,1,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "1,1,1,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "0,1,1,0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "1,0,1,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "0,1,1,0,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "0,1,1,0,0,0,0,1"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "assignment" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "tmp"))
                        (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_3"))
                        (rule "assignment_read_attribute_this" (formula "21"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "21") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "21") (term "0,1,0"))
                        (rule "assignment_array2" (formula "21"))
                        (branch "Normal Execution (x_arr_3 != null)"
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_0"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eval_order_array_access1" (formula "21") (term "1") (inst "#v0=x_arr"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_4"))
                           (rule "assignment_read_attribute_this" (formula "21"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "replaceKnownSelect_taclet10_0" (formula "21") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "21") (term "0,1,0"))
                           (rule "eval_order_array_access3" (formula "21") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_5"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_5"))
                           (rule "assignment" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_10"))
                           (rule "assignment" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_11"))
                           (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr_6"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_6"))
                           (rule "assignment_read_attribute_this" (formula "21"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "replaceKnownSelect_taclet10_0" (formula "21") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "21") (term "0,1,0"))
                           (rule "assignment_array2" (formula "21"))
                           (branch "Normal Execution (x_arr_6 != null)"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "assignment_to_primitive_array_component" (formula "21"))
                              (branch "Normal Execution (x_arr_5 != null)"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "eval_order_array_access1" (formula "21") (term "1") (inst "#v0=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_7"))
                                 (rule "assignment_read_attribute_this" (formula "21"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet10_0" (formula "21") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "21") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "21"))
                                 (branch "Normal Execution (x_arr_7 != null)"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "Class_invariant_axiom_for_SortPerm" (formula "18") (inst "sk=sk_5") (ifseqformula "4"))
                                    (branch "Use Axiom"
                                       (rule "replaceKnownSelect_taclet10_0" (formula "18") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "18") (term "0,0"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "commute_and" (formula "15") (term "0,0"))
                                       (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                       (rule "tryEmpty" (formula "20") (term "1"))
                                       (rule "methodCallEmpty" (formula "20") (term "1"))
                                       (rule "emptyModality" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "andRight" (formula "20"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "20"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "20"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "20"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "20"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "20"))
                                                      (branch "Case 1"
                                                         (rule "inEqSimp_geqRight" (formula "20"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "8"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0,0"))
                                                         (rule "qeq_literals" (formula "10") (term "0"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                         (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "20"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "8"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0"))
                                                         (rule "qeq_literals" (formula "11") (term "0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "inEqSimp_geqRight" (formula "20"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "8"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "20") (term "0,1"))
                                                   (rule "close" (formula "20") (ifseqformula "17"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "seqPermFromSwap" (formula "20") (inst "iv=iv") (inst "jv=jv") (ifseqformula "13") (userinteraction))
                                                (rule "inEqSimp_ltToLeq" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "7"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0"))
                                                (rule "qeq_literals" (formula "9") (term "0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "JML_represents_clause_for_SortPerm_seqa" (formula "18") (term "0,1,1,0,0,1") (inst "sk=sk_12") (inst "S=S") (ifseqformula "4"))
                                                (branch "Use Axiom"
                                                   (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,1,0,0,1"))
                                                   (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,1,0,0,1"))
                                                   (rule "replaceKnownSelect_taclet10_0" (formula "18") (term "1,0,1,1,0,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "18") (term "1,0,1,1,0,0,1"))
                                                   (rule "array2seqDef" (formula "18") (term "0,1,1,0,0,1") (inst "u=u"))
                                                   (rule "eqSymm" (formula "18") (term "1,0,0,1"))
                                                   (rule "eqSeqDef" (formula "18") (term "1,0,0,1") (inst "iv=iv_1"))
                                                   (rule "getOfSeqDef" (formula "18") (term "1,1,0,1,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0,1,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0,1,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0,1,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0,0,1"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,1,0,0,1"))
                                                   (rule "lenOfSwap" (formula "18") (term "0,0,1,0,0,1"))
                                                   (rule "lenOfSwap" (formula "18") (term "1,1,0,0,1,1,0,0,1"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "0,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,1,0,0,1,0,0,1"))
                                                   (rule "replace_known_left" (formula "18") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "getOfSwap" (formula "18") (term "0,1,0,1,0,0,1"))
                                                   (rule "eqSymm" (formula "18") (term "0,2,2,0,1,0,1,0,0,1"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "getOfSeqDef" (formula "18") (term "1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "1,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "2,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,2,1,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "getOfSeqDef" (formula "18") (term "1,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "1,1,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "2,1,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,2,1,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,1,0,1,0,1,0,0,1"))
                                                   (rule "getOfSeqDef" (formula "18") (term "2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "1,2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "2,2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,2,1,2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,0,2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,2,2,2,0,1,0,1,0,0,1"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "getOfSeqDef" (formula "18") (term "1,2,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "2,1,2,0,1,0,1,0,0,1"))
                                                   (rule "castDel" (formula "18") (term "1,1,2,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,2,1,1,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,2,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,2,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1,0,1,2,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,2,2,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0,1,0,1,0,0,1"))
                                                   (rule "ifthenelse_negated" (formula "18") (term "0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,2,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,2,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,2,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,2,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,2,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "replace_known_left" (formula "18") (term "0,0,1,0,0,1,0,0,0,1,0,1,0,0,1") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0,1"))
                                                   (rule "replace_known_left" (formula "18") (term "0,0,1,0,0,1,0,0,1,0,1,0,0,1") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,2,2,1,0,1,0,1,0,0,1"))
                                                   (rule "nnf_imp2or" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "nnf_notAnd" (formula "18") (term "0,0,1,0,0,1"))
                                                   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,0,1"))
                                                   (rule "commute_or" (formula "13") (term "0,0"))
                                                   (rule "JML_represents_clause_for_SortPerm_seqa" (formula "18") (term "0,1,1,1,0,0,0,0,1") (inst "sk=sk_13") (inst "S=S") (ifseqformula "4"))
                                                   (branch "Use Axiom"
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,1,1,0,0,0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,1,1,0,0,0,0,1"))
                                                      (rule "replaceKnownSelect_taclet10_0" (formula "18") (term "1,0,1,1,1,0,0,0,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "18") (term "1,0,1,1,1,0,0,0,0,1"))
                                                      (rule "array2seqDef" (formula "18") (term "0,1,1,1,0,0,0,0,1") (inst "u=u"))
                                                      (rule "lenOfSeqDef" (formula "18") (term "1,1,1,0,0,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,1,1,1,0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "1,1,1,1,1,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "1,1,1,1,0,0,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,1,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1,1,1,0,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,1,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,1,1,0,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1,1,0,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,1,0,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "18") (term "0,1,1,1,0,0,0,0,1") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "JML_represents_clause_for_SortPerm_seqa" (formula "18") (term "1,0") (inst "sk=sk_14") (inst "S=S") (ifseqformula "4"))
                                                      (branch "Use Axiom"
                                                         (rule "array2seqDef" (formula "18") (term "1,0") (inst "u=u"))
                                                         (rule "eqSymm" (formula "18") (term "0"))
                                                         (rule "narrowSelectArrayType" (formula "18") (term "2,0,0") (ifseqformula "2") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "nnf_ex2all" (formula "18"))
                                                         (rule "nnf_notEx" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAll" (formula "1") (term "1,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0"))
                                                         (rule "nnf_notOr" (formula "1") (term "0,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                                                         (rule "nnf_notOr" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0,0"))
                                                         (rule "JML_represents_clause_for_SortPerm_seqa" (formula "1") (term "0,1,1,0,0,0") (inst "sk=sk_15") (inst "S=S") (ifseqformula "5"))
                                                         (branch "Use Axiom"
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,1,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,1,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet10_0" (formula "1") (term "1,0,1,1,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "1") (term "1,0,1,1,0,0,0"))
                                                            (rule "array2seqDef" (formula "1") (term "0,1,1,0,0,0") (inst "u=u"))
                                                            (rule "lenOfSeqDef" (formula "1") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,1,1,0,0,0"))
                                                            (rule "times_zero_2" (formula "1") (term "1,1,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0,0,0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,1,1,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,1,0,0"))
                                                            (rule "commute_and" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "ex_pull_out3" (formula "1") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "allLeft" (formula "14") (inst "t=pos_0"))
                                                            (rule "replaceKnownSelect_taclet0000000010_4" (formula "14") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000000010_5" (formula "14") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "14") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "14") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "ifthenelse_to_or_right2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "allLeft" (formula "15") (inst "t=result"))
                                                            (rule "replaceKnownSelect_taclet000000010_2" (formula "15") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet000000010_3" (formula "15") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                                                            (rule "add_literals" (formula "15") (term "1,0,1"))
                                                            (rule "times_zero_1" (formula "15") (term "0,1"))
                                                            (rule "qeq_literals" (formula "15") (term "1"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "3"))
                                                            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "19"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "allLeft" (formula "1") (inst "t=pos_0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "10"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,0,1,0,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,1,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,1,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,1,0,0,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0") (inst "selectSK=arr_3"))
                                                            (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,2,1,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,1,1,0,0,0,0"))
                                                            (rule "commute_and" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,0,1,1,1,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,1,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,0,1,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,1,1,0,0,0"))
                                                            (rule "commute_and" (formula "2") (term "1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int7" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,1,0,1,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,0,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
                                                            (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                            (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,0,0,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,0,0,0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,1,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,1,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,1,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,1,1,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq3" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "2") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_and_2" (formula "1") (term "1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,1,1,0,0,0"))
                                                            (rule "commute_and" (formula "2") (term "1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_and" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,1,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,1,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,1,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "1,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,0,0,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,0,0,0,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "2") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "0,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "nnf_notOr" (formula "1") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "1,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int5" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,0,0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "1,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "1,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq3" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "1,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq3" (formula "2") (term "0,0,0,1,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,1,0,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,1,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq3" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "1") (term "0,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "replace_known_left" (formula "1") (term "1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "10"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq3" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,0,0,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,1,1,1,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,1,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int1" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "applyEq_or_int3" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,1,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0"))
                                                            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "1,1,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,1,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,1,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,1,1,1,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,1,1,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0,0,1,1,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,0,1,0,0,0,1,1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0,1,0,0,0,1,1,1,0,0"))
                                                            (rule "leq_literals" (formula "1") (term "1,0,0,0,1,1,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                            (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,1,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,1,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0,0"))
                                                            (rule "shift_paren_and" (formula "2") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                            (rule "commute_and" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_and" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "ifthenelse_to_or_right2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "allLeft" (formula "1") (inst "t=pos_0"))
                                                            (rule "replaceKnownSelect_taclet00001000000000000010_6" (formula "1") (term "0,0,0,0,0,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00001000000000000010_7" (formula "1") (term "0,0,0,0,0,1,0"))
                                                            (rule "exLeft" (formula "1") (inst "sk=iv_1_0"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "eqSymm" (formula "10") (term "0,0,0,0"))
                                                            (rule "eqSymm" (formula "10") (term "0,1,0,0"))
                                                            (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                            (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                                                            (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0,0,0"))
                                                            (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "2") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "10") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "2") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "3") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "5") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "3") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=arr_4"))
                                                            (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                                            (rule "simplifySelectOfAnon" (formula "4"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                            (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "1,0,0") (ifseqformula "13") (ifseqformula "24"))
                                                            (rule "narrowSelectArrayType" (formula "4") (term "0,0,0") (ifseqformula "13") (ifseqformula "24"))
                                                            (rule "eqSymm" (formula "4") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=arr_5"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replaceKnownSelect_taclet00001000000000000010_8" (formula "3") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00001000000000000010_9" (formula "3") (term "2,0"))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "15") (ifseqformula "26"))
                                                            (rule "commute_or" (formula "6"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "result = iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "applyEq" (formula "23") (term "0,2,1,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "22"))
                                                               (rule "applyEq" (formula "8") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "24"))
                                                               (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "6") (term "0,2,0,0,1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "notLeft" (formula "6"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "notLeft" (formula "4"))
                                                               (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "5") (term "0,2,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "5") (term "0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "4") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "inEqSimp_strengthen0" (formula "19") (ifseqformula "22"))
                                                               (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "19"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "22") (term "0,0"))
                                                               (rule "qeq_literals" (formula "22") (term "0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "false_right" (formula "22"))
                                                               (rule "inEqSimp_strengthen0" (formula "21") (ifseqformula "22"))
                                                               (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "21"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "22") (term "0,0"))
                                                               (rule "qeq_literals" (formula "22") (term "0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "false_right" (formula "22"))
                                                               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
                                                               (rule "times_zero_1" (formula "13") (term "0,0"))
                                                               (rule "add_zero_left" (formula "13") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "allLeft" (formula "20") (inst "t=pos_0"))
                                                               (rule "replaceKnownSelect_taclet0000000010_4" (formula "20") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000000010_5" (formula "20") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "20") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0"))
                                                               (rule "qeq_literals" (formula "20") (term "0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "allLeft" (formula "20") (inst "t=iv_1_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "22"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_29"))
                                                               (rule "simplifySelectOfAnon" (formula "20"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                               (rule "hideAuxiliaryEq" (formula "20"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20"))
                                                               (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                               (rule "add_literals" (formula "20") (term "1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "0"))
                                                               (rule "qeq_literals" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "allLeft" (formula "3") (inst "t=iv_1_0"))
                                                               (rule "exLeft" (formula "3") (inst "sk=iv_1_6"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "eqSymm" (formula "12") (term "0,1,0,0"))
                                                               (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                               (rule "eqSymm" (formula "11") (term "1"))
                                                               (rule "eqSymm" (formula "10") (term "1"))
                                                               (rule "eqSymm" (formula "10") (term "1,0,0,0"))
                                                               (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "eqSymm" (formula "9") (term "1"))
                                                               (rule "eqSymm" (formula "8") (term "1"))
                                                               (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "eqSymm" (formula "7") (term "1,0,0,0"))
                                                               (rule "eqSymm" (formula "7") (term "1"))
                                                               (rule "eqSymm" (formula "6") (term "1"))
                                                               (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "12") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "22"))
                                                               (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "22"))
                                                               (rule "qeq_literals" (formula "5") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "22"))
                                                               (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "22"))
                                                               (rule "qeq_literals" (formula "10") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "5") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "4") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "7") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "3") (term "0,1,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "3") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "pullOutSelect" (formula "7") (term "1,0,0") (inst "selectSK=arr_30"))
                                                               (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "6") (term "1,0,0,0") (ifseqformula "7"))
                                                               (rule "simplifySelectOfAnon" (formula "7"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                                               (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                               (rule "applyEqReverse" (formula "6") (term "1,0,0,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "narrowSelectArrayType" (formula "6") (term "1,0,0,0") (ifseqformula "16") (ifseqformula "27"))
                                                               (rule "narrowSelectArrayType" (formula "7") (term "1,0,0") (ifseqformula "16") (ifseqformula "27"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0,0,0,0") (ifseqformula "16") (ifseqformula "27"))
                                                               (rule "pullOutSelect" (formula "7") (term "0,0,0") (inst "selectSK=arr_31"))
                                                               (rule "simplifySelectOfStore" (formula "7"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "castDel" (formula "7") (term "1,0"))
                                                               (rule "inEqSimp_contradEq3" (formula "7") (term "0,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "simplifySelectOfStore" (formula "7"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "castDel" (formula "7") (term "0"))
                                                               (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "pullOutSelect" (formula "6") (term "0,0,0,0") (inst "selectSK=arr_32"))
                                                               (rule "simplifySelectOfStore" (formula "6"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "castDel" (formula "6") (term "1,0"))
                                                               (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_33"))
                                                               (rule "simplifySelectOfStore" (formula "6"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replaceKnownSelect_taclet000001000000000000010_16" (formula "6") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001000000000000010_17" (formula "6") (term "2,0"))
                                                               (rule "castDel" (formula "6") (term "1,0"))
                                                               (rule "eqSymm" (formula "6") (term "0,0"))
                                                               (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "18") (ifseqformula "29"))
                                                               (rule "commute_or_2" (formula "3"))
                                                               (rule "commute_or" (formula "9"))
                                                               (rule "commute_or_2" (formula "8"))
                                                               (rule "commute_or" (formula "3") (term "0"))
                                                               (rule "commute_or_2" (formula "3"))
                                                               (rule "ifthenelse_split" (formula "6") (term "0"))
                                                               (branch "iv_1_6 = iv_1_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,0,0,1") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "notLeft" (formula "7"))
                                                                  (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "23") (term "1,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "closeTrue" (formula "25"))
                                                               )
                                                               (branch "iv_1_6 = iv_1_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "replace_known_right" (formula "6") (term "1,0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "pos_0 = iv_1_6 TRUE"
                                                                     (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "eqSymm" (formula "6") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "true_left" (formula "6"))
                                                                     (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "notLeft" (formula "6"))
                                                                     (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "5"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "closeTrue" (formula "25"))
                                                                  )
                                                                  (branch "pos_0 = iv_1_6 FALSE"
                                                                     (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")))
                                                                     (rule "closeFalse" (formula "6"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "result = iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "ifthenelse_split" (formula "3") (term "0"))
                                                               (branch "pos_0 = iv_1_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "notLeft" (formula "4"))
                                                                  (rule "applyEq" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "19") (term "0,2,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "19") (term "1,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "22"))
                                                                  (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                  (rule "leq_literals" (formula "22") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "false_right" (formula "22"))
                                                                  (rule "inEqSimp_strengthen1" (formula "20") (ifseqformula "22"))
                                                                  (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                  (rule "leq_literals" (formula "22") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "false_right" (formula "22"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "allLeft" (formula "18") (inst "t=iv_1_0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "18") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_7"))
                                                                  (rule "simplifySelectOfAnon" (formula "18"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                                  (rule "hideAuxiliaryEq" (formula "18"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "18"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "17"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "allLeft" (formula "18") (inst "t=result"))
                                                                  (rule "replaceKnownSelect_taclet000000010_2" (formula "18") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet000000010_3" (formula "18") (term "0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1"))
                                                                  (rule "add_literals" (formula "18") (term "1,0,1"))
                                                                  (rule "times_zero_1" (formula "18") (term "0,1"))
                                                                  (rule "qeq_literals" (formula "18") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "allLeft" (formula "3") (inst "t=iv_1_0"))
                                                                  (rule "exLeft" (formula "3") (inst "sk=iv_1_1"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "eqSymm" (formula "11") (term "1"))
                                                                  (rule "eqSymm" (formula "10") (term "1"))
                                                                  (rule "eqSymm" (formula "9") (term "1"))
                                                                  (rule "eqSymm" (formula "8") (term "1"))
                                                                  (rule "eqSymm" (formula "7") (term "1"))
                                                                  (rule "eqSymm" (formula "6") (term "1"))
                                                                  (rule "eqSymm" (formula "3") (term "0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "5") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "12") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "5") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "4") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0,0") (ifseqformula "4"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "4"))
                                                                  (rule "qeq_literals" (formula "6") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "3") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "6") (term "1,0,0") (inst "selectSK=arr_8"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                                                  (rule "simplifySelectOfAnon" (formula "6"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "narrowSelectArrayType" (formula "6") (term "1,0,0") (ifseqformula "15") (ifseqformula "25"))
                                                                  (rule "narrowSelectArrayType" (formula "5") (term "1,0,0") (ifseqformula "15") (ifseqformula "25"))
                                                                  (rule "pullOutSelect" (formula "6") (term "0,0,0") (inst "selectSK=arr_9"))
                                                                  (rule "simplifySelectOfStore" (formula "6"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "castDel" (formula "6") (term "0"))
                                                                  (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "pullOutSelect" (formula "5") (term "0,0,0") (inst "selectSK=arr_10"))
                                                                  (rule "simplifySelectOfStore" (formula "5"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "castDel" (formula "5") (term "1,0"))
                                                                  (rule "eqSymm" (formula "5") (term "0,0"))
                                                                  (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_11"))
                                                                  (rule "simplifySelectOfStore" (formula "5"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replaceKnownSelect_taclet0100001000000000000010_16" (formula "5") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100001000000000000010_17" (formula "5") (term "2,0"))
                                                                  (rule "castDel" (formula "5") (term "1,0"))
                                                                  (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "17") (ifseqformula "27"))
                                                                  (rule "commute_or" (formula "8"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "result = iv_1_1 TRUE"
                                                                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "applyEq" (formula "9") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "8") (term "0,2,0,0,1") (ifseqformula "5"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "notLeft" (formula "8"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "26"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "eqSymm" (formula "6") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "25"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "notLeft" (formula "6"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "20") (term "0,2,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "21") (term "0,2,1,1,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                                     (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "20"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "false_right" (formula "23"))
                                                                     (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "22"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "false_right" (formula "23"))
                                                                     (rule "allLeft" (formula "21") (inst "t=iv_1_0"))
                                                                     (rule "replaceKnownSelect_taclet0100001000000000000010_14" (formula "21") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0100001000000000000010_15" (formula "21") (term "0,1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "21") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "21") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_subsumption1" (formula "21") (term "1") (ifseqformula "20"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                                     (rule "qeq_literals" (formula "21") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "allLeft" (formula "21") (inst "t=iv_1_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "23"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "21") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "21") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_16"))
                                                                     (rule "simplifySelectOfAnon" (formula "21"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                                                     (rule "hideAuxiliaryEq" (formula "21"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "21"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                                     (rule "add_literals" (formula "21") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "0"))
                                                                     (rule "qeq_literals" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "allLeft" (formula "6") (inst "t=iv_1_0"))
                                                                     (rule "exLeft" (formula "6") (inst "sk=iv_1_3"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "eqSymm" (formula "14") (term "1"))
                                                                     (rule "eqSymm" (formula "13") (term "1"))
                                                                     (rule "eqSymm" (formula "12") (term "1"))
                                                                     (rule "eqSymm" (formula "11") (term "1"))
                                                                     (rule "eqSymm" (formula "10") (term "1"))
                                                                     (rule "eqSymm" (formula "9") (term "1"))
                                                                     (rule "eqSymm" (formula "6") (term "0,1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "14") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "18"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "10"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "true_left" (formula "11"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "17"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "17"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "17"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "8") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "true_left" (formula "11"))
                                                                     (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "15"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "15"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "7") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "7"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "7"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "13"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "10") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "true_left" (formula "6"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "pullOutSelect" (formula "9") (term "1,0,0") (inst "selectSK=arr_17"))
                                                                     (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                                                     (rule "simplifySelectOfAnon" (formula "9"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "applyEqReverse" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                                                     (rule "applyEqReverse" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "narrowSelectArrayType" (formula "8") (term "1,0,0") (ifseqformula "18") (ifseqformula "27"))
                                                                     (rule "narrowSelectArrayType" (formula "9") (term "1,0,0") (ifseqformula "18") (ifseqformula "27"))
                                                                     (rule "pullOutSelect" (formula "9") (term "0,0,0") (inst "selectSK=arr_18"))
                                                                     (rule "simplifySelectOfStore" (formula "9"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "castDel" (formula "9") (term "0"))
                                                                     (rule "applyEqReverse" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "eqSymm" (formula "9") (term "0,0"))
                                                                     (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_19"))
                                                                     (rule "simplifySelectOfStore" (formula "8"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "castDel" (formula "8") (term "1,0"))
                                                                     (rule "eqSymm" (formula "8") (term "0,0"))
                                                                     (rule "pullOutSelect" (formula "8") (term "2,0") (inst "selectSK=arr_20"))
                                                                     (rule "simplifySelectOfStore" (formula "8"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replaceKnownSelect_taclet00100001000000000000010_26" (formula "8") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00100001000000000000010_27" (formula "8") (term "2,0"))
                                                                     (rule "castDel" (formula "8") (term "1,0"))
                                                                     (rule "eqSymm" (formula "8") (term "0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "20") (ifseqformula "29"))
                                                                     (rule "commute_or" (formula "11"))
                                                                     (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                     (branch "iv_1_3 = iv_1_1 TRUE"
                                                                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "8"))
                                                                        (rule "applyEq" (formula "10") (term "0,2,0,0,1") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "notLeft" (formula "10"))
                                                                        (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "27"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "eqSymm" (formula "8") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "26"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "notLeft" (formula "8"))
                                                                        (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "6"))
                                                                        (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "21"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                        (rule "leq_literals" (formula "24") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "false_right" (formula "24"))
                                                                        (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "23"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                        (rule "leq_literals" (formula "24") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "false_right" (formula "24"))
                                                                        (rule "allLeft" (formula "7") (inst "t=iv_1_1"))
                                                                        (rule "exLeft" (formula "7") (inst "sk=iv_1_5"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "eqSymm" (formula "15") (term "1"))
                                                                        (rule "eqSymm" (formula "14") (term "1"))
                                                                        (rule "eqSymm" (formula "13") (term "1"))
                                                                        (rule "eqSymm" (formula "12") (term "1"))
                                                                        (rule "eqSymm" (formula "11") (term "1"))
                                                                        (rule "eqSymm" (formula "10") (term "1"))
                                                                        (rule "eqSymm" (formula "7") (term "0,1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "15") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "16") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "16") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "8") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "true_left" (formula "12"))
                                                                        (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "replace_known_left" (formula "12") (term "1,0,0,0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "true_left" (formula "12"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "9") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                                        (rule "qeq_literals" (formula "7") (term "0,1,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0,0") (ifseqformula "8"))
                                                                        (rule "qeq_literals" (formula "10") (term "0,1,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "9"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "pullOutSelect" (formula "11") (term "1,0,0") (inst "selectSK=arr_25"))
                                                                        (rule "applyEq" (formula "10") (term "1,0,0,0") (ifseqformula "11"))
                                                                        (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "11"))
                                                                        (rule "simplifySelectOfAnon" (formula "11"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "applyEqReverse" (formula "12") (term "1,0,0") (ifseqformula "11"))
                                                                        (rule "applyEqReverse" (formula "10") (term "1,0,0,0") (ifseqformula "11"))
                                                                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "11"))
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "narrowSelectArrayType" (formula "11") (term "1,0,0") (ifseqformula "20") (ifseqformula "29"))
                                                                        (rule "narrowSelectArrayType" (formula "7") (term "0,0,0,0") (ifseqformula "20") (ifseqformula "29"))
                                                                        (rule "narrowSelectArrayType" (formula "10") (term "1,0,0,0") (ifseqformula "20") (ifseqformula "29"))
                                                                        (rule "pullOutSelect" (formula "11") (term "0,0,0") (inst "selectSK=arr_26"))
                                                                        (rule "simplifySelectOfStore" (formula "11"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "castDel" (formula "11") (term "1,0"))
                                                                        (rule "eqSymm" (formula "11") (term "0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "29"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "simplifySelectOfStore" (formula "11"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "castDel" (formula "11") (term "0"))
                                                                        (rule "applyEqReverse" (formula "12") (term "0,0,0") (ifseqformula "11"))
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "eqSymm" (formula "11") (term "0,0"))
                                                                        (rule "pullOutSelect" (formula "10") (term "0,0,0,0") (inst "selectSK=arr_27"))
                                                                        (rule "simplifySelectOfStore" (formula "10"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "castDel" (formula "10") (term "1,0"))
                                                                        (rule "eqSymm" (formula "10") (term "0,0"))
                                                                        (rule "pullOutSelect" (formula "10") (term "2,0") (inst "selectSK=arr_28"))
                                                                        (rule "simplifySelectOfStore" (formula "10"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "replaceKnownSelect_taclet000100001000000000000010_34" (formula "10") (term "2,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet000100001000000000000010_35" (formula "10") (term "2,0"))
                                                                        (rule "castDel" (formula "10") (term "1,0"))
                                                                        (rule "eqSymm" (formula "10") (term "0,0"))
                                                                        (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "22") (ifseqformula "31"))
                                                                        (rule "commute_or" (formula "13"))
                                                                        (rule "commute_or" (formula "7") (term "0"))
                                                                        (rule "commute_or_2" (formula "7"))
                                                                        (rule "applyEq_or_gen0" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                        (branch "iv_1_5 = iv_1_1 TRUE"
                                                                           (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                                                           (rule "hideAuxiliaryEq" (formula "11"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "10"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "notLeft" (formula "7"))
                                                                           (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "true_left" (formula "11"))
                                                                           (rule "applyEqRigid" (formula "11") (term "0,2,0,0,1") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "8"))
                                                                           (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "7"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "closeTrue" (formula "27"))
                                                                        )
                                                                        (branch "iv_1_5 = iv_1_1 FALSE"
                                                                           (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                                           (rule "hideAuxiliaryEq" (formula "10"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "29"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                           (branch "iv_1_5 = iv_1_0 TRUE"
                                                                              (rule "applyEqReverse" (formula "11") (term "0,0,0") (ifseqformula "10"))
                                                                              (rule "hideAuxiliaryEq" (formula "10"))
                                                                              (rule "eqSymm" (formula "10") (term "0,0"))
                                                                              (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "11"))
                                                                              (rule "notLeft" (formula "11"))
                                                                              (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "10"))
                                                                              (rule "true_left" (formula "10"))
                                                                              (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "closeTrue" (formula "27"))
                                                                           )
                                                                           (branch "iv_1_5 = iv_1_0 FALSE"
                                                                              (rule "applyEqReverse" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "29")))
                                                                              (rule "closeFalse" (formula "10"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "iv_1_3 = iv_1_1 FALSE"
                                                                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                        (branch "iv_1_3 = iv_1_0 TRUE"
                                                                           (rule "applyEqReverse" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                           (rule "hideAuxiliaryEq" (formula "9"))
                                                                           (rule "eqSymm" (formula "9") (term "0,0"))
                                                                           (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "notLeft" (formula "10"))
                                                                           (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
                                                                           (rule "true_left" (formula "9"))
                                                                           (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "8"))
                                                                           (rule "eqSymm" (formula "27"))
                                                                           (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "8"))
                                                                           (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "7"))
                                                                           (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "7"))
                                                                           (rule "eqSymm" (formula "25"))
                                                                           (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "24"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                                           (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "false_right" (formula "26"))
                                                                           (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "22"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "25") (term "0,0"))
                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "false_right" (formula "25"))
                                                                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "6") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "true_left" (formula "6"))
                                                                           (rule "allLeft" (formula "7") (inst "t=iv_1_1"))
                                                                           (rule "exLeft" (formula "7") (inst "sk=iv_1_4"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "andLeft" (formula "7"))
                                                                           (rule "eqSymm" (formula "15") (term "1"))
                                                                           (rule "eqSymm" (formula "14") (term "1"))
                                                                           (rule "eqSymm" (formula "13") (term "1"))
                                                                           (rule "eqSymm" (formula "12") (term "1"))
                                                                           (rule "eqSymm" (formula "11") (term "1"))
                                                                           (rule "eqSymm" (formula "10") (term "1"))
                                                                           (rule "eqSymm" (formula "7") (term "0,1"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "15") (term "0,1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "13"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "16") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "13"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                                           (rule "qeq_literals" (formula "16") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "8") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "true_left" (formula "12"))
                                                                           (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "true_left" (formula "11"))
                                                                           (rule "replace_known_left" (formula "12") (term "1,0,0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "true_left" (formula "12"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "9") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "true_left" (formula "10"))
                                                                           (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "true_left" (formula "10"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                                           (rule "qeq_literals" (formula "7") (term "0,1,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0,0") (ifseqformula "8"))
                                                                           (rule "qeq_literals" (formula "10") (term "0,1,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "pullOutSelect" (formula "11") (term "1,0,0") (inst "selectSK=arr_21"))
                                                                           (rule "applyEq" (formula "10") (term "1,0,0,0") (ifseqformula "11"))
                                                                           (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "11"))
                                                                           (rule "simplifySelectOfAnon" (formula "11"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "applyEqReverse" (formula "12") (term "1,0,0") (ifseqformula "11"))
                                                                           (rule "applyEqReverse" (formula "10") (term "1,0,0,0") (ifseqformula "11"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "11"))
                                                                           (rule "hideAuxiliaryEq" (formula "11"))
                                                                           (rule "narrowSelectArrayType" (formula "11") (term "1,0,0") (ifseqformula "20") (ifseqformula "29"))
                                                                           (rule "narrowSelectArrayType" (formula "7") (term "0,0,0,0") (ifseqformula "20") (ifseqformula "29"))
                                                                           (rule "narrowSelectArrayType" (formula "10") (term "1,0,0,0") (ifseqformula "20") (ifseqformula "29"))
                                                                           (rule "pullOutSelect" (formula "11") (term "0,0,0") (inst "selectSK=arr_22"))
                                                                           (rule "simplifySelectOfStore" (formula "11"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "castDel" (formula "11") (term "1,0"))
                                                                           (rule "eqSymm" (formula "11") (term "0,0"))
                                                                           (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "29"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                                           (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "simplifySelectOfStore" (formula "11"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "castDel" (formula "11") (term "0"))
                                                                           (rule "applyEqReverse" (formula "12") (term "0,0,0") (ifseqformula "11"))
                                                                           (rule "hideAuxiliaryEq" (formula "11"))
                                                                           (rule "eqSymm" (formula "11") (term "0,0"))
                                                                           (rule "pullOutSelect" (formula "10") (term "0,0,0,0") (inst "selectSK=arr_23"))
                                                                           (rule "simplifySelectOfStore" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "castDel" (formula "10") (term "1,0"))
                                                                           (rule "eqSymm" (formula "10") (term "0,0"))
                                                                           (rule "pullOutSelect" (formula "10") (term "2,0") (inst "selectSK=arr_24"))
                                                                           (rule "simplifySelectOfStore" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "replaceKnownSelect_taclet0100100001000000000000010_34" (formula "10") (term "2,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100100001000000000000010_35" (formula "10") (term "2,0"))
                                                                           (rule "castDel" (formula "10") (term "1,0"))
                                                                           (rule "eqSymm" (formula "10") (term "0,0"))
                                                                           (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "22") (ifseqformula "31"))
                                                                           (rule "commute_or" (formula "13"))
                                                                           (rule "commute_or" (formula "7") (term "0"))
                                                                           (rule "commute_or_2" (formula "7"))
                                                                           (rule "applyEq_or_gen0" (formula "7") (term "0"))
                                                                           (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "30"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                           (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                           (branch "iv_1_4 = iv_1_1 TRUE"
                                                                              (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                                                              (rule "hideAuxiliaryEq" (formula "11"))
                                                                              (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "10"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "notLeft" (formula "7"))
                                                                              (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "11"))
                                                                              (rule "true_left" (formula "11"))
                                                                              (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "closeTrue" (formula "29"))
                                                                           )
                                                                           (branch "iv_1_4 = iv_1_1 FALSE"
                                                                              (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                                              (rule "hideAuxiliaryEq" (formula "10"))
                                                                              (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "29"))
                                                                              (builtin "One Step Simplification" (formula "10"))
                                                                              (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                              (branch "iv_1_4 = iv_1_0 TRUE"
                                                                                 (rule "applyEqReverse" (formula "11") (term "0,0,0") (ifseqformula "10"))
                                                                                 (rule "hideAuxiliaryEq" (formula "10"))
                                                                                 (rule "eqSymm" (formula "10") (term "0,0"))
                                                                                 (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "11"))
                                                                                 (rule "notLeft" (formula "11"))
                                                                                 (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                 (rule "true_left" (formula "10"))
                                                                                 (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "closeTrue" (formula "27"))
                                                                              )
                                                                              (branch "iv_1_4 = iv_1_0 FALSE"
                                                                                 (rule "applyEqReverse" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "29")))
                                                                                 (rule "closeFalse" (formula "10"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "iv_1_3 = iv_1_0 FALSE"
                                                                           (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "9"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "result = iv_1_1 FALSE"
                                                                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                     (branch "iv_1_1 = iv_1_0 TRUE"
                                                                        (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                        (rule "hideAuxiliaryEq" (formula "6"))
                                                                        (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "notLeft" (formula "6"))
                                                                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "23") (term "0,2,1") (ifseqformula "4"))
                                                                        (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "21"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                        (rule "leq_literals" (formula "24") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "false_right" (formula "24"))
                                                                        (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                        (rule "leq_literals" (formula "23") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "false_right" (formula "23"))
                                                                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "3") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "true_left" (formula "3"))
                                                                        (rule "allLeft" (formula "4") (inst "t=result"))
                                                                        (rule "exLeft" (formula "4") (inst "sk=iv_1_2"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "13") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "5") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "6") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "31"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "pullOutSelect" (formula "4") (term "0,0,0,0,0,0") (inst "selectSK=arr_12"))
                                                                        (rule "applyEq" (formula "14") (term "1,0,0,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "13") (term "1,0,0,0,0,0,0") (ifseqformula "4"))
                                                                        (rule "simplifySelectOfAnon" (formula "4"))
                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "4"))
                                                                        (rule "applyEqReverse" (formula "14") (term "1,0,0,0") (ifseqformula "4"))
                                                                        (rule "applyEqReverse" (formula "13") (term "1,0,0,0,0,0,0") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "narrowSelectArrayType" (formula "13") (term "1,0,0,0") (ifseqformula "22") (ifseqformula "32"))
                                                                        (rule "narrowSelectArrayType" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "22") (ifseqformula "32"))
                                                                        (rule "eqSymm" (formula "4") (term "0,0,0,0,0"))
                                                                        (rule "narrowSelectArrayType" (formula "12") (term "1,0,0,0,0,0,0") (ifseqformula "22") (ifseqformula "32"))
                                                                        (rule "pullOutSelect" (formula "10") (term "0,0,0,0,0,0") (inst "selectSK=arr_13"))
                                                                        (rule "applyEq" (formula "13") (term "0,0,0,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "12") (term "0,0,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "simplifySelectOfStore" (formula "10"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "castDel" (formula "10") (term "1,0"))
                                                                        (rule "eqSymm" (formula "11") (term "0,0,0,0,0"))
                                                                        (rule "eqSymm" (formula "12") (term "0,0,0,0,0"))
                                                                        (rule "eqSymm" (formula "10") (term "0,0"))
                                                                        (rule "pullOutSelect" (formula "14") (term "0,0,0,0") (inst "selectSK=arr_14"))
                                                                        (rule "simplifySelectOfStore" (formula "14"))
                                                                        (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "castDel" (formula "14") (term "1,0"))
                                                                        (rule "eqSymm" (formula "14") (term "0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "32"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "14") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "simplifySelectOfStore" (formula "14"))
                                                                        (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "castDel" (formula "14") (term "0"))
                                                                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0") (ifseqformula "14"))
                                                                        (rule "hideAuxiliaryEq" (formula "14"))
                                                                        (rule "eqSymm" (formula "14") (term "0,0,0"))
                                                                        (rule "pullOutSelect" (formula "10") (term "2,0") (inst "selectSK=arr_15"))
                                                                        (rule "simplifySelectOfStore" (formula "10"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "replaceKnownSelect_taclet010100001000000000000010_24" (formula "10") (term "2,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010100001000000000000010_25" (formula "10") (term "2,0"))
                                                                        (rule "castDel" (formula "10") (term "1,0"))
                                                                        (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "24") (ifseqformula "34"))
                                                                        (rule "commute_or_2" (formula "9") (term "0"))
                                                                        (rule "commute_or" (formula "6"))
                                                                        (rule "commute_or_2" (formula "4"))
                                                                        (rule "commute_or_2" (formula "7") (term "0"))
                                                                        (rule "commute_or_2" (formula "14") (term "0"))
                                                                        (rule "commute_or_2" (formula "12") (term "0"))
                                                                        (rule "commute_or_2" (formula "9"))
                                                                        (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "8"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "true_left" (formula "9"))
                                                                        (rule "commute_or_2" (formula "7"))
                                                                        (rule "commute_or_2" (formula "13"))
                                                                        (rule "commute_or_2" (formula "11"))
                                                                        (rule "commute_or" (formula "14") (term "0"))
                                                                        (rule "commute_or_2" (formula "14"))
                                                                        (rule "commute_or" (formula "4") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "4") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "4") (term "0"))
                                                                        (rule "commute_or_2" (formula "4"))
                                                                        (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                        (branch "result = iv_1_2 TRUE"
                                                                           (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                                           (rule "hideAuxiliaryEq" (formula "10"))
                                                                           (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "9"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "true_left" (formula "10"))
                                                                           (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "7"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "7"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "true_left" (formula "9"))
                                                                           (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "7"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "true_left" (formula "9"))
                                                                           (rule "applyEq" (formula "4") (term "0,2,0,0,1") (ifseqformula "7"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "11") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "11") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "11") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "11") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "8") (term "0,2,1,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "11") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "7"))
                                                                           (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "27"))
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "true_left" (formula "6"))
                                                                           (rule "applyEq" (formula "9") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "9") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "9") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "9") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "10") (term "0,2,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "9") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                           (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "25"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                           (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "inEqSimp_contradEq7" (formula "7") (term "0,1") (ifseqformula "22"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0,0,1"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,1"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0,0,1"))
                                                                           (rule "leq_literals" (formula "7") (term "0,0,1"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "inEqSimp_contradEq7" (formula "4") (term "1,0") (ifseqformula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                                                           (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "24"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "4") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                           (rule "add_literals" (formula "22") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "result = iv_1_2 FALSE"
                                                                           (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                                           (rule "hideAuxiliaryEq" (formula "9"))
                                                                           (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "replace_known_right" (formula "7") (term "1,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "true_left" (formula "4"))
                                                                           (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "31"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "31"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch "iv_1_2 = iv_1_0 TRUE"
                                                                              (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0,0") (ifseqformula "9"))
                                                                              (rule "applyEqReverse" (formula "11") (term "1,0,0,0,0") (ifseqformula "9"))
                                                                              (rule "applyEqReverse" (formula "10") (term "1,0,0,0,0") (ifseqformula "9"))
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "8"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "7"))
                                                                              (builtin "One Step Simplification" (formula "11"))
                                                                              (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "7"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "true_left" (formula "6"))
                                                                              (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "6"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "true_left" (formula "8"))
                                                                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "6"))
                                                                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "applyEq" (formula "4") (term "1,1,1") (ifseqformula "5"))
                                                                              (rule "applyEqRigid" (formula "6") (term "0,2,0,0,1") (ifseqformula "5"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "6"))
                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "4"))
                                                                              (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "22"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                                              (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                              (rule "leq_literals" (formula "24") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "24"))
                                                                              (rule "false_right" (formula "24"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "5"))
                                                                              (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                              (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                              (rule "add_literals" (formula "22") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "22") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                              (rule "closeFalse" (formula "22"))
                                                                           )
                                                                           (branch "iv_1_2 = iv_1_0 FALSE"
                                                                              (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                                                              (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "31")))
                                                                              (rule "applyEqReverse" (formula "10") (term "1,0,0,0,0") (ifseqformula "8"))
                                                                              (rule "applyEqReverse" (formula "9") (term "1,0,0,0,0") (ifseqformula "8"))
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "7") (term "1,0") (ifseqformula "30"))
                                                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "29"))
                                                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
                                                                              (rule "true_left" (formula "6"))
                                                                              (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "28"))
                                                                              (builtin "One Step Simplification" (formula "9"))
                                                                              (rule "true_left" (formula "9"))
                                                                              (rule "replace_known_right" (formula "7") (term "1,0") (ifseqformula "27"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "27"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "cut_direct" (formula "4") (term "0"))
                                                                              (branch "CUT: iv_1_2 >= 0 TRUE"
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "true_left" (formula "5"))
                                                                                 (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "4"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                                                                 (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "cut_direct" (formula "5") (term "0"))
                                                                                 (branch "CUT: result <= -1 TRUE"
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "true_left" (formula "6"))
                                                                                    (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "5"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "5"))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "true_left" (formula "6"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "5"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                    (rule "add_literals" (formula "22") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "22") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "closeFalse" (formula "22"))
                                                                                 )
                                                                                 (branch "CUT: result <= -1 FALSE"
                                                                                    (builtin "One Step Simplification" (formula "5"))
                                                                                    (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "26"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "replace_known_right" (formula "6") (term "1,0") (ifseqformula "26"))
                                                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
                                                                                    (rule "true_left" (formula "6"))
                                                                                    (rule "inEqSimp_leqRight" (formula "25"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                                    (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                                    (rule "add_zero_right" (formula "7") (term "0"))
                                                                                    (rule "leq_literals" (formula "7"))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch "CUT: iv_1_2 >= 0 FALSE"
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "4"))
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "true_left" (formula "5"))
                                                                                 (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "4"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                                                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "25")))
                                                                                 (rule "true_left" (formula "6"))
                                                                                 (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "4"))
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "true_left" (formula "5"))
                                                                                 (rule "inEqSimp_geqRight" (formula "23"))
                                                                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                 (rule "mul_literals" (formula "1") (term "1"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "5"))
                                                                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                 (rule "add_literals" (formula "22") (term "0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "22") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "closeFalse" (formula "22"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "iv_1_1 = iv_1_0 FALSE"
                                                                        (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "26")))
                                                                        (rule "closeFalse" (formula "6"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "pos_0 = iv_1_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Show Axiom Satisfiability"
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "closeTrue" (formula "17"))
                                                         )
                                                      )
                                                      (branch "Show Axiom Satisfiability"
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "closeTrue" (formula "18"))
                                                      )
                                                   )
                                                   (branch "Show Axiom Satisfiability"
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "closeTrue" (formula "18"))
                                                   )
                                                )
                                                (branch "Show Axiom Satisfiability"
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "closeTrue" (formula "18"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "20") (inst "sk=f_0"))
                                             (rule "allRight" (formula "20") (inst "sk=o_0"))
                                             (rule "orRight" (formula "20"))
                                             (rule "orRight" (formula "20"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "inEqSimp_ltToLeq" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "7"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_0_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0,1,0"))
                                          (rule "precOfInt" (formula "20"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "20") (term "0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0,1,0,1"))
                                          (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "20") (term "0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "7"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "20") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "20") (term "0,1"))
                                          (rule "add_literals" (formula "20") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "0,1"))
                                          (rule "leq_literals" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_leqRight" (formula "20"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Show Axiom Satisfiability"
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeTrue" (formula "19"))
                                    )
                                 )
                                 (branch "Null Reference (x_arr_7 = null)"
                                    (rule "false_right" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_7 != null, but pos Out of Bounds!)"
                                    (rule "false_right" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "inEqSimp_gtToGeq" (formula "8"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "qeq_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Null Reference (x_arr_5 = null)"
                                 (rule "false_right" (formula "22"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_5 != null, but x_10 Out of Bounds!)"
                                 (rule "false_right" (formula "22"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "8"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "15"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "closeFalse" (formula "9"))
                              )
                           )
                           (branch "Null Reference (x_arr_6 = null)"
                              (rule "false_right" (formula "22"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_6 != null, but pos Out of Bounds!)"
                              (rule "false_right" (formula "22"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "inEqSimp_ltToLeq" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "8"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0"))
                              (rule "qeq_literals" (formula "11") (term "0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Null Reference (x_arr_3 = null)"
                           (rule "false_right" (formula "22"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_3 != null, but idx Out of Bounds!)"
                           (rule "false_right" (formula "22"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "inEqSimp_ltToLeq" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "8"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "pullOutSelect" (formula "14") (term "1,1,0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnon" (formula "14"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "14"))
                           (rule "hideAuxiliaryEq" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                     )
                     (branch "Exceptional Post (max)"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "0,1,1,0,1,0,1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "1,0,1,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "1,1,1,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "0,1,1,0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "1,0,1,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "1,1,1,0,0,0,1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "0,1,1,0,0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "0,1,1,0,0,0,0,1"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "16"))
                        (rule "notLeft" (formula "14"))
                        (rule "close" (formula "17") (ifseqformula "16"))
                     )
                     (branch "Pre (max)"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "wellFormedAnon" (formula "16") (term "1"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "16") (term "0,1,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "16") (term "0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet10_0" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "7")) (ifInst ""  (formula "2")))
                        (rule "inEqSimp_ltToLeq" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "7"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0"))
                        (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "15") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "Class_invariant_axiom_for_SortPerm" (formula "14") (inst "sk=sk_8") (ifseqformula "4"))
                        (branch "Use Axiom"
                           (rule "replaceKnownSelect_taclet10_0" (formula "14") (term "0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "14") (term "0,0"))
                           (rule "notRight" (formula "14"))
                           (rule "close" (formula "13") (ifseqformula "1"))
                        )
                        (branch "Show Axiom Satisfiability"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "closeTrue" (formula "14"))
                        )
                     )
                  )
                  (branch "if x_6 false"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_2 = null)"
                  (rule "false_right" (formula "16"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_1 = null)"
               (rule "false_right" (formula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "12"))
         (rule "closeTrue" (formula "12"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_1"))
      (rule "pullOutSelect" (formula "10") (term "0,1") (inst "selectSK=SortPerm_a_0"))
      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
      (rule "simplifySelectOfAnon" (formula "10"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")) (ifInst ""  (formula "2")))
      (rule "eqSymm" (formula "10") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "10") (term "0,0"))
      (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
      (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "10"))
      (rule "hideAuxiliaryEq" (formula "10"))
      (rule "JML_represents_clause_for_SortPerm_seqa" (formula "11") (term "0") (inst "sk=sk_1") (inst "S=S") (ifseqformula "3"))
      (branch "Use Axiom"
         (rule "replaceKnownSelect_taclet20_0" (formula "11") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "11") (term "1,0"))
         (rule "array2seqDef" (formula "11") (term "0") (inst "u=u"))
         (rule "JML_represents_clause_for_SortPerm_seqa" (formula "11") (term "1") (inst "sk=sk_2") (inst "S=S") (ifseqformula "3"))
         (branch "Use Axiom"
            (rule "array2seqDef" (formula "11") (term "1") (inst "u=u"))
            (rule "narrowSelectArrayType" (formula "11") (term "2,1") (ifseqformula "1") (ifseqformula "12"))
            (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
            (rule "compound_subtraction_1" (formula "14") (term "1") (inst "#v=x_2"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
            (rule "eval_order_array_access6" (formula "14") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr"))
            (rule "assignment_read_attribute_this" (formula "14"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "replaceKnownSelect_taclet20_0" (formula "14") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "14") (term "0,1,0"))
            (rule "assignment_read_length" (formula "14"))
            (branch "Normal Execution (x_arr != null)"
               (builtin "One Step Simplification" (formula "14"))
               (rule "assignmentSubtractionInt" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "translateJavaSubInt" (formula "14") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "14") (term "0,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "methodCallEmpty" (formula "14") (term "1"))
               (rule "emptyModality" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "impRight" (formula "14"))
               (rule "notLeft" (formula "1"))
               (rule "methodCallEmpty" (formula "15") (term "1"))
               (rule "tryEmpty" (formula "15") (term "1"))
               (rule "emptyModality" (formula "15") (term "1"))
               (rule "andRight" (formula "15"))
               (branch "Case 1"
                  (rule "andRight" (formula "15"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_ltRight" (formula "12"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "6"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                     (rule "mul_literals" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "JML_represents_clause_for_SortPerm_seqa" (formula "16") (term "1") (inst "sk=sk_10") (inst "S=S") (ifseqformula "4"))
                     (branch "Use Axiom"
                        (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "16") (term "2,1") (ifseqformula "2") (ifseqformula "14"))
                        (rule "JML_represents_clause_for_SortPerm_seqa" (formula "16") (term "0") (inst "sk=sk_11") (inst "S=S") (ifseqformula "4"))
                        (branch "Use Axiom"
                           (rule "replaceKnownSelect_taclet20_0" (formula "16") (term "1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "16") (term "1,0"))
                           (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                           (rule "close" (formula "16") (ifseqformula "13"))
                        )
                        (branch "Show Axiom Satisfiability"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "closeTrue" (formula "16"))
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_ltRight" (formula "12"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "6"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                     (rule "mul_literals" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1"))
                     (rule "Class_invariant_axiom_for_SortPerm" (formula "16") (inst "sk=sk_9") (ifseqformula "4"))
                     (branch "Use Axiom"
                        (rule "replaceKnownSelect_taclet20_0" (formula "16") (term "0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "16") (term "0,0"))
                        (rule "notRight" (formula "16"))
                        (rule "close" (formula "15") (ifseqformula "1"))
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
            )
            (branch "Null Reference (x_arr = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "12"))
         (rule "closeTrue" (formula "12"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
